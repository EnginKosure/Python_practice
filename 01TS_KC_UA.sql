--CLAIMID_1 CALCULATION
(SELECT DISTINCT LOCALINSURER,--* EXCEPT(SUM_PREV_ENDRES, KC_STATUS, CLAIMID_1, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM ), 
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS CNT_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS CNT_KO_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KO_YR,

    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS SUM_BEGRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_BEGRES,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_ENDRES,
    "GR3-CLAIMID1-Policy Nr.+Cover Code+Claim Date" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_1 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT DISTINCT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_1 ORDER BY CLAIMID_1, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_1 ORDER BY CLAIMID_1, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_1,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_1, RE_BALANCEYEARPTF ORDER BY CLAIMID_1, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_1, RE_BALANCEYEARPTF ORDER BY CLAIMID_1, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_v5`

    -- ORDER BY CLAIMID_1, RE_BALANCEYEARPTF
    ) s
)

--   ORDER BY CLAIMID_1, RE_BALANCEYEARPTF
  )

-- GROUP BY LOCALINSURER, RE_BALANCEYEARPTF, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM
-- ORDER BY LOCALINSURER
)

UNION ALL

--CLAIMID_2 CALCULATION
(SELECT DISTINCT LOCALINSURER,--* EXCEPT(SUM_PREV_ENDRES, KC_STATUS, CLAIMID_1, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM ), 
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS CNT_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS CNT_KO_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KO_YR,

    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS SUM_BEGRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_BEGRES,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_ENDRES,
    "GR3-CLAIMID2-Policy Nr.+Cover Code+Insured person Birth date" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_2 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT DISTINCT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_2 ORDER BY CLAIMID_2, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_2 ORDER BY CLAIMID_2, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_2,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_2, RE_BALANCEYEARPTF ORDER BY CLAIMID_2, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_2, RE_BALANCEYEARPTF ORDER BY CLAIMID_2, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_v5`

    -- ORDER BY CLAIMID_2, RE_BALANCEYEARPTF
    ) s
)
--   ORDER BY CLAIMID_2, RE_BALANCEYEARPTF
  )

-- GROUP BY LOCALINSURER, RE_BALANCEYEARPTF, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM
-- ORDER BY LOCALINSURER
)

UNION ALL
--CLAIMID_3 CALCULATION
(SELECT DISTINCT LOCALINSURER,--* EXCEPT(SUM_PREV_ENDRES, KC_STATUS, CLAIMID_1, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM ), 
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS CNT_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS CNT_KO_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KO_YR,

    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS SUM_BEGRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_BEGRES,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_ENDRES,
    "GR4-CLAIMID3-Policy Nr.+Cover Code+Carrier reference+Claim Date" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_3 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT DISTINCT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_3 ORDER BY CLAIMID_3, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_3 ORDER BY CLAIMID_3, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_3,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_3, RE_BALANCEYEARPTF ORDER BY CLAIMID_3, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_3, RE_BALANCEYEARPTF ORDER BY CLAIMID_3, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_v5`

    -- ORDER BY CLAIMID_3, RE_BALANCEYEARPTF
    ) s
)
--   ORDER BY CLAIMID_3, RE_BALANCEYEARPTF
)

-- GROUP BY LOCALINSURER, RE_BALANCEYEARPTF, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM
-- ORDER BY LOCALINSURER
)

UNION ALL
--CLAIMID_4 CALCULATION
(SELECT DISTINCT LOCALINSURER,--* EXCEPT(SUM_PREV_ENDRES, KC_STATUS, CLAIMID_1, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM ), 
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS CNT_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS CNT_KO_YR,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KC_YR,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KO_YR,

    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS SUM_BEGRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_BEGRES,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_ENDRES,
    "GR3-CLAIMID4-Policy Nr.+Cover Code+Carrier Reference" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_4 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT DISTINCT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_4 ORDER BY CLAIMID_4, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_4 ORDER BY CLAIMID_4, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_4,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_4, RE_BALANCEYEARPTF ORDER BY CLAIMID_4, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_4, RE_BALANCEYEARPTF ORDER BY CLAIMID_4, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_v5`

    -- ORDER BY CLAIMID_4, RE_BALANCEYEARPTF
    ) s
)
--   ORDER BY CLAIMID_4, RE_BALANCEYEARPTF
  )

-- GROUP BY LOCALINSURER, RE_BALANCEYEARPTF, SUM_BEGRES, SUM_ENDRES, KEEP_CLAIM
-- ORDER BY LOCALINSURER
)

ORDER BY LOCALINSURER, PCT_SUM_KC_ENDRES DESC,CALC_METHOD DESC