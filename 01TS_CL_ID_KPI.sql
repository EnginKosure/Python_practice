
SELECT DISTINCT *,
    -- CASE 
    --   WHEN MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER)=0
    --     THEN MAX(CALC_METHOD) OVER (PARTITION BY LOCALINSURER)
    --   WHEN MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER)=TOTAL_PCT_SUM_KC_ENDRES
    --     THEN CALC_METHOD
    --   ELSE ''
    -- END AS SELECTED

    CASE 
  WHEN ROW_NUMBER() OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF ORDER BY TOTAL_PCT_SUM_KC_ENDRES DESC, CALC_METHOD DESC )=1
    -- THEN CAST(MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER) as STRING)
    THEN CONCAT(CAST(MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER) as STRING),' | ',CALC_METHOD)
  -- WHEN ROW_NUMBER() OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF ORDER BY TOTAL_PCT_SUM_KC_ENDRES DESC, CALC_METHOD DESC )<>1
  --   THEN CAST(MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER) as STRING)
  ELSE CAST(MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF) AS STRING)
END AS SELECTED,
    CONCAT(CAST(MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER) as STRING),' | ',
IF(ROW_NUMBER() OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF ORDER BY TOTAL_PCT_SUM_KC_ENDRES DESC, CALC_METHOD DESC )=1, CALC_METHOD,'')) AS PCT,

-- IF ((MAX(TOTAL_PCT_SUM_KC_ENDRES) OVER (PARTITION BY LOCALINSURER)= (select f.MaxPct FROM `geb-dwh-test.uat_geb_dwh_eu_act.source_keep_claim_pct_highest` f where f.Row_NR=1 and f.LOCALINSURER=t.LOCALINSURER)) ,
--  (SELECT s.CALC_METHOD FROM `geb-dwh-test.uat_geb_dwh_eu_act.source_keep_claim_pct_highest` s where s.Row_NR=1 and s.LOCALINSURER=s.LOCALINSURER ),'error') OS
(select f.CALC_METHOD
FROM `geb
-dwh-test.uat_geb_dwh_eu_act.source_keep_claim_pct_highest` f where f.Row_NR=1 and f.LOCALINSURER=t.LOCALINSURER) TRY
-- IF(RANK() OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF ORDER BY TOTAL_PCT_SUM_KC_ENDRES DESC, CALC_METHOD DESC )=1,CALC_METHOD,
-- LAG(CALC_METHOD) OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF ORDER BY TOTAL_PCT_SUM_KC_ENDRES DESC, CALC_METHOD DESC )) AS SELECTED_PCT,
-- IF(<>1,IF(RANK() OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF ORDER BY TOTAL_PCT_SUM_KC_ENDRES DESC, CALC_METHOD DESC )=1,CALC_METHOD,''),'') AS SELECTED_PCT2
 FROM
(
  -- CLAIMID_1
  (SELECT DISTINCT LOCALINSURER,
    RE_BALANCEYEARPTF,
    --YEARLY TOTAL COUNT
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF) AS CNT_YR,
    --YEARLY KEEP CLAIM COUNT
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KC_YR,
    --YEARLY KO COUNT
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KO_YR,
    --YEARLY KEEP CLAIM PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KC_YR,
    --YEARLY KO PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KO_YR,

    --------
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS TOTAL_CNT,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS TOTAL_CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS TOTAL_CNT_KO,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS TOTAL_PCT_CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS TOTAL_PCT_CNT_KO,
    ---------


    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    --SUM TOTAL BEGRES
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_BEGRES_YR,
    --SUM KEEP CLAIM BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_BEGRES_YR,
    --SUM KO BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_BEGRES_YR,
    --SUM KEEP CLAIM BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_BEGRES_YR,
    --SUM KO BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_BEGRES_YR,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_ENDRES_YR,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_ENDRES_YR,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_ENDRES_YR,

    -----

    ------
    --SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS TOTAL_PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS TOTAL_PCT_SUM_KO_BEGRES,

    --SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS TOTAL_PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS TOTAL_PCT_SUM_KO_ENDRES,
    -----

    "GR3-CLAIMID1-Policy Nr.+Cover Code+Claim Date" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_1 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_1 ORDER BY CLAIMID_1, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_1 ORDER BY CLAIMID_1, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_1,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_1, RE_BALANCEYEARPTF ORDER BY CLAIMID_1, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_1, RE_BALANCEYEARPTF ORDER BY CLAIMID_1, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_staging`

    -- ORDER BY CLAIMID_1, RE_BALANCEYEARPTF
        ) s
      )
    )
  )

 UNION ALL

--CLAIMID_2
(SELECT DISTINCT LOCALINSURER,
    RE_BALANCEYEARPTF,
    --YEARLY TOTAL COUNT
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF) AS CNT_YR,
    --YEARLY KEEP CLAIM COUNT
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KC_YR,
    --YEARLY KO COUNT
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KO_YR,
    --YEARLY KEEP CLAIM PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KC_YR,
    --YEARLY KO PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KO_YR,

    -------
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS TOTAL_CNT,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS CNT_KO,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KO,
    -------

    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    --SUM TOTAL BEGRES
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_BEGRES_YR,
    --SUM KEEP CLAIM BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_BEGRES,
    --SUM KO BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_BEGRES,
    --SUM KEEP CLAIM BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_BEGRES,
    --SUM KO BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_BEGRES,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_ENDRES,

    -----

    ---------

    --SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_BEGRES,

    --SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_ENDRES,
    -----


    "GR3-CLAIMID2-Policy Nr.+Cover Code+Insured person Birth date" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_2 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_2 ORDER BY CLAIMID_2, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_2 ORDER BY CLAIMID_2, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_2,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_2, RE_BALANCEYEARPTF ORDER BY CLAIMID_2, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_2, RE_BALANCEYEARPTF ORDER BY CLAIMID_2, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_staging`

    -- ORDER BY CLAIMID_1, RE_BALANCEYEARPTF
        ) s
      )
    )
  )

UNION ALL

--CLAIMID_3
(SELECT DISTINCT LOCALINSURER,
    RE_BALANCEYEARPTF,
    --YEARLY TOTAL COUNT
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF) AS CNT_YR,
    --YEARLY KEEP CLAIM COUNT
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KC_YR,
    --YEARLY KO COUNT
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KO_YR,
    --YEARLY KEEP CLAIM PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KC_YR,
    --YEARLY KO PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KO_YR,

    -------
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS TOTAL_CNT,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS CNT_KO,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KO,
    -------


    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    --SUM TOTAL BEGRES
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_BEGRES_YR,
    --SUM KEEP CLAIM BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_BEGRES,
    --SUM KO BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_BEGRES,
    --SUM KEEP CLAIM BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_BEGRES,
    --SUM KO BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_BEGRES,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_ENDRES,


    -----

    -----

    --SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_BEGRES,

    --SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_ENDRES,
    -----

    "GR4-CLAIMID3-Policy Nr.+Cover Code+Carrier reference+Claim Date" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_3 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_3 ORDER BY CLAIMID_3, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_3 ORDER BY CLAIMID_3, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_3,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_3, RE_BALANCEYEARPTF ORDER BY CLAIMID_3, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_3, RE_BALANCEYEARPTF ORDER BY CLAIMID_3, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_staging`

    -- ORDER BY CLAIMID_3, RE_BALANCEYEARPTF
        ) s
      )
    )
  )

UNION ALL

--CLAIMID_4
(SELECT DISTINCT LOCALINSURER,
    RE_BALANCEYEARPTF,
    --YEARLY TOTAL COUNT
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER, RE_BALANCEYEARPTF) AS CNT_YR,
    --YEARLY KEEP CLAIM COUNT
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KC_YR,
    --YEARLY KO COUNT
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS CNT_KO_YR,
    --YEARLY KEEP CLAIM PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KC_YR,
    --YEARLY KO PERCENTAGE
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS PCT_CNT_KO_YR,

    -------
    COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS TOTAL_CNT,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER) AS CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) AS CNT_KO,
    COUNTIF(KEEP_CLAIM = 'KEEP CLAIM') OVER (PARTITION BY LOCALINSURER)/COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KC,
    COUNTIF(KEEP_CLAIM = 'K.O') OVER (PARTITION BY LOCALINSURER) / COUNT(KEEP_CLAIM) OVER (PARTITION BY LOCALINSURER) AS PCT_CNT_KO,
    -------

    --YEARLY SUM BEGRES AND PERCENTAGE CALC
    --SUM TOTAL BEGRES
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_BEGRES_YR,
    --SUM KEEP CLAIM BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_BEGRES,
    --SUM KO BEGRES
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_BEGRES,
    --SUM KEEP CLAIM BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_BEGRES,
    --SUM KO BEGRES PERCENTAGE
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_BEGRES,

    --YEARLY SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER,RE_BALANCEYEARPTF)),0) AS PCT_SUM_KO_ENDRES,


    -----

    ------

    --SUM BEGRES AND PERCENTAGE CALC
    SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER) AS TOTAL_SUM_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_BEGRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_BEGRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_BEGRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_BEGRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_BEGRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_BEGRES,

    --SUM ENDRES AND PERCENTAGE CALC
    SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER) AS SUM_ENDRES_YR,
    SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KC_ENDRES,
    SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER) AS SUM_KO_ENDRES,

    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'KEEP CLAIM' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KC_ENDRES,
    COALESCE(SAFE_DIVIDE(SUM(CASE WHEN KEEP_CLAIM = 'K.O' THEN SUM_ENDRES ELSE 0 END) OVER (PARTITION BY LOCALINSURER), SUM(SUM_ENDRES) OVER (PARTITION BY LOCALINSURER)),0) AS PCT_SUM_KO_ENDRES,
    -----

    "GR3-CLAIMID4-Policy Nr.+Cover Code+Carrier Reference" as CALC_METHOD

FROM (SELECT
        DISTINCT *,
        MIN(KC_STATUS) OVER (PARTITION BY CLAIMID_4 ) AS KEEP_CLAIM, 
    FROM
        (
  SELECT *,
            LAG(SUM_ENDRES, 1, 0) OVER (PARTITION BY CLAIMID_4 ORDER BY CLAIMID_4, RE_BALANCEYEARPTF) AS SUM_PREV_ENDRES,
            IF (COALESCE(SUM_BEGRES, 0)=LAG(SUM_ENDRES, 1, 0)
OVER
(PARTITION BY CLAIMID_4 ORDER BY CLAIMID_4, RE_BALANCEYEARPTF) , 'KEEP CLAIM', 'K.O') AS KC_STATUS,
  FROM
(
  SELECT DISTINCT
    CLAIMID_4,
    LOCALINSURER,
    RE_BALANCEYEARPTF,
    COALESCE(SUM(BEGRES) OVER (PARTITION BY CLAIMID_4, RE_BALANCEYEARPTF ORDER BY CLAIMID_4, RE_BALANCEYEARPTF ),0) AS SUM_BEGRES,--not MAX, CONFIRMED
    COALESCE(SUM(ENDRES) OVER (PARTITION BY CLAIMID_4, RE_BALANCEYEARPTF ORDER BY CLAIMID_4, RE_BALANCEYEARPTF ),0) AS SUM_ENDRES, --not MIN, CONFIRMED

FROM
    `geb
-dwh-test.uat_geb_dwh_eu_act.fact_actuary_staging`

    -- ORDER BY CLAIMID_4, RE_BALANCEYEARPTF
        ) s
      )
    )
  )
) t
 ORDER BY LOCALINSURER, RE_BALANCEYEARPTF,PCT_SUM_KC_ENDRES_YR DESC,CALC_METHOD DESC
